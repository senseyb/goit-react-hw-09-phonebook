{"version":3,"sources":["components/Contacts.module.css","redux/contacts/contacts.operations.js","redux/contacts/contacts.selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","loadingSelector","state","contacts","loading","contactsFilterSelector","filter","contactsItemsSelector","items","filteredItemsSelector","createSelector","item","name","toLowerCase","includes","trim","ContactList","useSelector","dispatch","useDispatch","handleDelete","id","contactId","a","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","className","styles","ul","map","number","textContent","btn","type","onClick","Filter","block","title","input","onChange","evt","e","target","value","filterChange","initialState","ContactForm","useState","setState","useEffect","getAllContactsRequest","get","data","getAllContactsSuccess","getAllContactsError","handleSubmit","contact","some","alert","addNewContactsRequest","post","addNewContactsSuccess","addNewContactsError","handleChange","prev","form","onSubmit","preventDefault","pattern","required","speener","color","height","width","timeout","Contacts"],"mappings":"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","file":"static/js/contacts-view.174408a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__23sNF\",\"titleContact\":\"Contacts_titleContact__1uYL-\",\"block\":\"Contacts_block__JKuDL\"};","import axios from \"axios\";\nimport {\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n} from \"./contacts.actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst addNewContacts = (contact) => async (dispatch) => {\n  dispatch(addNewContactsRequest());\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(addNewContactsSuccess(data));\n  } catch (error) {\n    dispatch(addNewContactsError(error));\n  }\n};\n\nconst getAllContacts = () => async (dispatch) => {\n  dispatch(getAllContactsRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(getAllContactsSuccess(data));\n  } catch (error) {\n    dispatch(getAllContactsError(error));\n  }\n};\n\nconst removeContacts = (contactId) => async (dispatch) => {\n  dispatch(removeContactsRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(removeContactsSuccess(contactId));\n  } catch (error) {\n    dispatch(removeContactsError(error));\n  }\n};\n\nexport { addNewContacts, getAllContacts, removeContacts };\n","\nimport { createSelector } from \"@reduxjs/toolkit\";\n\nexport const loadingSelector = (state) => state.contacts.loading;\nexport const contactsFilterSelector = (state) => state.contacts.filter;\nexport const contactsItemsSelector = (state) => state.contacts.items;\n  \nexport const filteredItemsSelector = createSelector([\n    contactsItemsSelector,\n    contactsFilterSelector,\n], (items, filter) => items.filter((item) =>\n    item.name.toLowerCase().includes(filter.toLowerCase().trim())\n));\n","import React from \"react\";\nimport {useDispatch, useSelector } from \"react-redux\";\nimport { removeContacts } from \"../../redux/contacts/contacts.operations\";\nimport styles from \"./ContactList.module.css\";\nimport { filteredItemsSelector } from \"../../redux/contacts/contacts.selector\";\n\nconst ContactList = () => {\n  const items = useSelector(filteredItemsSelector);\n  const dispatch = useDispatch();\n  const handleDelete = (id) => dispatch(removeContacts(id));\n\n  return (\n    <ul className={styles.ul}>\n      {items.map(({ id, name, number }) => (\n        <li key={id} className={styles.textContent}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport { filterChange } from \"../../redux/contacts/contacts.actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsFilterSelector } from \"../../redux/contacts/contacts.selector\";\n\nconst Filter = () => {\n  const filter = useSelector(contactsFilterSelector);\n  const dispatch = useDispatch();\n  const handleChange = (e) => dispatch(filterChange(e));\n\n  const onChange = (evt) => {\n    handleChange(evt.target.value);\n  };\n  return (\n    <div className={styles.block}>\n      <h2 className={styles.title}>Find contacts by name</h2>\n      <input\n        className={styles.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        onChange={onChange}\n        value={filter}\n      ></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport {\n  addNewContacts,\n  getAllContacts,\n} from \"../../redux/contacts/contacts.operations\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  contactsItemsSelector,\n  loadingSelector,\n} from \"../../redux/contacts/contacts.selector\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = () => {\n  const [state, setState] = useState(initialState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const { items, loading } = useSelector((state) => {\n    return {\n      items: contactsItemsSelector(state),\n      loading: loadingSelector(state),\n    };\n  });\n\n  const handleSubmit = (name, number) => {\n    const isDuplicate = items.some((item) => item.name === name);\n\n    if (isDuplicate) {\n      alert(name + \" is already in contacts \");\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addNewContacts(newContact));\n  };\n\n  const handleChange = (evt) => {\n    setState((prev) => ({ ...prev, [evt.target.name]: evt.target.value }));\n  };\n\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n    handleSubmit(state.name, state.number);\n    setState({ name: \"\", number: \"\" });\n  };\n\n  return (\n    <div className={styles.block}>\n      <form className={styles.form} onSubmit={onSubmit}>\n        <span className={styles.title}>Name:</span>\n        <input\n          onChange={handleChange}\n          value={state.name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <span className={styles.title}>Number Tel:</span>\n        <input\n          name=\"number\"\n          type=\"tel\"\n          onChange={handleChange}\n          value={state.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      <div className={styles.speener}>\n        {loading ? (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={50}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport styles from \"./Contacts.module.css\";\n\nconst Contacts = () => {\n  return (\n    <div className=\"container\">\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.title}>Contacts</h2>\n      <div className={styles.block}>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__mb4ZP\",\"btn\":\"ContactList_btn__2KZWG\",\"textContent\":\"ContactList_textContent__WZCZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__3CPUh\",\"title\":\"Filter_title___ZQni\",\"input\":\"Filter_input__bF9WH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ContactForm_block__1_KGN\",\"form\":\"ContactForm_form__1qbgv\",\"title\":\"ContactForm_title__2sgIs\",\"btn\":\"ContactForm_btn__30MuP\",\"speener\":\"ContactForm_speener__1_Zwa\"};"],"sourceRoot":""}